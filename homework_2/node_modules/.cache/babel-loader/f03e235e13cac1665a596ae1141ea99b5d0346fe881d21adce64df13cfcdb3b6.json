{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79991\\\\Downloads\\\\www-2sem-main\\\\homework_2\\\\src\\\\pages\\\\details\\\\components\\\\Moves.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport bug from '../../sources/types/bug@2x.png';\nimport dark from '../../sources/types/dark@2x.png';\nimport dragon from '../../sources/types/dragon@2x.png';\nimport electric from '../../sources/types/electric@2x.png';\nimport fairy from '../../sources/types/fairy@2x.png';\nimport fight from '../../sources/types/fight@2x.png';\nimport fire from '../../sources/types/fire@2x.png';\nimport flying from '../../sources/types/flying@2x.png';\nimport ghost from '../../sources/types/ghost@2x.png';\nimport grass from '../../sources/types/grass@2x.png';\nimport ground from '../../sources/types/ground@2x.png';\nimport ice from '../../sources/types/ice@2x.png';\nimport normal from '../../sources/types/normal@2x.png';\nimport poison from '../../sources/types/poison@2x.png';\nimport psychic from '../../sources/types/psychic@2x.png';\nimport rock from '../../sources/types/rock@2x.png';\nimport steel from '../../sources/types/steel@2x.png';\nimport water from '../../sources/types/water@2x.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Moves = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"general\",\n    style: {\n      transform: `translateX(-100%)`,\n      animation: `slideRight 1.5s ease forwards`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Moves\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"moves-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"moves-list\",\n        children: data.moves.slice(0, 3).map(move => /*#__PURE__*/_jsxDEV(Move, {\n          move: move.move\n        }, move.move.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 59\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"moves-list\",\n        children: data.moves.slice(3, 6).map(move => /*#__PURE__*/_jsxDEV(Move, {\n          move: move.move\n        }, move.move.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 59\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_c = Moves;\nconst Move = ({\n  move\n}) => {\n  _s();\n  const [moveData, setMoveData] = useState(null);\n  const typesImages = {\n    \"bug\": bug,\n    \"dark\": dark,\n    \"dragon\": dragon,\n    \"electric\": electric,\n    \"fairy\": fairy,\n    \"fighting\": fight,\n    \"fire\": fire,\n    \"flying\": flying,\n    \"ghost\": ghost,\n    \"grass\": grass,\n    \"ground\": ground,\n    \"ice\": ice,\n    \"normal\": normal,\n    \"poison\": poison,\n    \"psychic\": psychic,\n    \"rock\": rock,\n    \"steel\": steel,\n    \"water\": water\n  };\n  useEffect(() => {\n    fetch(`https://pokeapi.co/api/v2/move/${move.name}`).then(response => response.json()).then(data => setMoveData(data)).catch(error => {\n      console.log('There was an ERROR: ', error);\n    });\n  }, [move]);\n  if (!moveData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 16\n    }, this);\n  } else {\n    const nameSplit = moveData.name.split('-');\n    const name = nameSplit.map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `move ${moveData.type.name}-moves`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: moveData.type.name,\n          src: typesImages[`${moveData.type.name}`]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  }\n};\n_s(Move, \"w7/KwPrJBPTGofXQjlpmi4WQsJg=\");\n_c2 = Move;\nexport default Moves;\nvar _c, _c2;\n$RefreshReg$(_c, \"Moves\");\n$RefreshReg$(_c2, \"Move\");","map":{"version":3,"names":["React","useEffect","useState","bug","dark","dragon","electric","fairy","fight","fire","flying","ghost","grass","ground","ice","normal","poison","psychic","rock","steel","water","jsxDEV","_jsxDEV","Moves","data","className","style","transform","animation","children","fileName","_jsxFileName","lineNumber","columnNumber","moves","slice","map","move","Move","name","_c","_s","moveData","setMoveData","typesImages","fetch","then","response","json","catch","error","console","log","nameSplit","split","word","charAt","toUpperCase","join","type","alt","src","_c2","$RefreshReg$"],"sources":["C:/Users/79991/Downloads/www-2sem-main/homework_2/src/pages/details/components/Moves.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport bug from '../../sources/types/bug@2x.png'\nimport dark from '../../sources/types/dark@2x.png'\nimport dragon from '../../sources/types/dragon@2x.png'\nimport electric from '../../sources/types/electric@2x.png'\nimport fairy from '../../sources/types/fairy@2x.png'\nimport fight from '../../sources/types/fight@2x.png'\nimport fire from '../../sources/types/fire@2x.png'\nimport flying from '../../sources/types/flying@2x.png'\nimport ghost from '../../sources/types/ghost@2x.png'\nimport grass from '../../sources/types/grass@2x.png'\nimport ground from '../../sources/types/ground@2x.png'\nimport ice from '../../sources/types/ice@2x.png'\nimport normal from '../../sources/types/normal@2x.png'\nimport poison from '../../sources/types/poison@2x.png'\nimport psychic from '../../sources/types/psychic@2x.png'\nimport rock from '../../sources/types/rock@2x.png'\nimport steel from '../../sources/types/steel@2x.png'\nimport water from '../../sources/types/water@2x.png'\n\nconst Moves = ({ data }) => {\n    return(\n        <div className=\"general\" style={{ transform: `translateX(-100%)`, animation: `slideRight 1.5s ease forwards`}}>\n            <p>Moves</p>\n            <div className=\"moves-container\">\n                <div className=\"moves-list\">\n                    {data.moves.slice(0, 3).map((move) => <Move key={move.move.name} move={move.move} />)}\n                </div>\n                <div className=\"moves-list\">\n                    {data.moves.slice(3, 6).map((move) => <Move key={move.move.name} move={move.move} />)}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst Move = ({ move }) => {\n    const [moveData, setMoveData] = useState(null);\n    const typesImages = {\n        \"bug\": bug,\n        \"dark\": dark,\n        \"dragon\": dragon,\n        \"electric\": electric,\n        \"fairy\": fairy,\n        \"fighting\": fight,\n        \"fire\": fire,\n        \"flying\": flying,\n        \"ghost\": ghost,\n        \"grass\": grass,\n        \"ground\": ground,\n        \"ice\": ice,\n        \"normal\": normal,\n        \"poison\": poison,\n        \"psychic\": psychic,\n        \"rock\": rock,\n        \"steel\": steel,\n        \"water\": water\n    };\n\n    useEffect(() => {\n        fetch(`https://pokeapi.co/api/v2/move/${move.name}`)\n          .then(response => response.json())\n          .then(data => setMoveData(data))\n          .catch((error) => {\n            console.log('There was an ERROR: ', error);\n          });\n        }, [move]);\n\n    if (!moveData){\n        return <div></div>\n    }\n    else{\n        const nameSplit = moveData.name.split('-');\n        const name = nameSplit.map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n\n        return (\n            <div className={`move ${moveData.type.name}-moves`}>\n                <div className='stats'>\n                    <img alt={moveData.type.name} src={typesImages[`${moveData.type.name}`]} />\n                    <span>{name}</span>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default Moves;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}